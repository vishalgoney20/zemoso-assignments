{"ast":null,"code":"var _jsxFileName = \"/home/vishal/kl-ui/src/_components/molecules/KLDrawer/KLDrawer.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Typography } from '@material-ui/core';\nimport { ReactComponent as Send } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/Icons/send.svg\";\nimport { ReactComponent as Resend } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/Icons/resend.svg\";\nimport { ReactComponent as SendDull } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/Icons/sendDull.svg\";\nimport { ReactComponent as Message } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/Icons/sms.svg\";\nimport { ReactComponent as Mail } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../../assets/Icons/mail.svg\";\nimport { useHistory } from \"react-router-dom\";\nimport KLSnackBar from '../../atoms/KLSnackBar/KLSnackBar';\nimport KLButton from '../../atoms/KLButton/KLButton';\nconst useStyles = makeStyles({\n  fullList: {\n    width: 'auto',\n    height: '263'\n  },\n  bodyTextStyle: {\n    height: 32,\n    color: '#344563',\n    fontFamily: 'Roboto Condensed',\n    fontSize: 12,\n    fontWeight: 'bold',\n    letterSpacing: 0,\n    lineHeight: 2.5\n  },\n  headingTextStyle: {\n    height: 32,\n    color: '#344563',\n    fontFamily: \"Roboto Condensed\",\n    fontSize: 16,\n    fontWeight: \"bold\",\n    letterSpacing: 0,\n    lineHeight: 3\n  },\n  buttonDivStyle: {\n    textAlign: 'center'\n  },\n  listItemIconStyle: {\n    width: 30,\n    minWidth: 30\n  },\n  largeIconStyle: {\n    width: 50,\n    minWidth: 50\n  }\n});\n\nfunction DrawerComponent(props) {\n  const classes = useStyles();\n  const [resend, setResend] = React.useState(false);\n  const [resendMobile, setResendMobile] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n\n  const toggleDrawer = event => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n\n    props.onClose();\n    setResend(false);\n    setResendMobile(false);\n  };\n\n  const handleresendMobile = () => {\n    setResendMobile(true);\n  };\n\n  const handleresend = () => {\n    setResend(true);\n  };\n\n  const handleClick = () => {\n    setOpen(true);\n  };\n\n  const handleButtonClose = () => {\n    props.onClose();\n    setResend(false);\n    setResendMobile(false);\n    history.push(\"/newLink\");\n  };\n\n  const list = () => /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.fullList,\n    role: \"presentation\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(List, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Typography, {\n    className: classes.headingTextStyle,\n    variant: \"h5\",\n    align: \"center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 9\n    }\n  }, \"Share via\"), props.data.map((text, index) => /*#__PURE__*/React.createElement(ListItem, {\n    key: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ListItemIcon, {\n    className: classes.listItemIconStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 13\n    }\n  }, index % 2 === 0 ? /*#__PURE__*/React.createElement(Message, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 34\n    }\n  }) : /*#__PURE__*/React.createElement(Mail, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 48\n    }\n  })), /*#__PURE__*/React.createElement(ListItemText, {\n    classes: {\n      primary: classes.bodyTextStyle\n    },\n    primary: text,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(ListItemIcon, {\n    style: {\n      cursor: \"pointer\"\n    },\n    className: classes.largeIconStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 13\n    }\n  }, index % 2 === 0 ? props.disable ? resendMobile ? /*#__PURE__*/React.createElement(Resend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 34\n    }\n  }) : /*#__PURE__*/React.createElement(Send, {\n    onClick: handleresendMobile,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 23\n    }\n  }) : /*#__PURE__*/React.createElement(SendDull, {\n    onClick: handleClick,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 21\n    }\n  }) : resend ? /*#__PURE__*/React.createElement(Resend, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 28\n    }\n  }) : /*#__PURE__*/React.createElement(Send, {\n    onClick: handleresend,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 41\n    }\n  }))))), /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.buttonDivStyle,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(KLButton, {\n    disabled: !resend && !resendMobile,\n    value: \"Done\",\n    onClick: handleButtonClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  })));\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(React.Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Drawer, {\n    anchor: 'bottom',\n    open: props.open,\n    onClose: toggleDrawer,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 11\n    }\n  }, list()), /*#__PURE__*/React.createElement(KLSnackBar, {\n    open: open,\n    message: \"Go back to contact details and add mobile number\",\n    onClose: () => {\n      setOpen(false);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 11\n    }\n  })));\n}\n\nexport default DrawerComponent;","map":{"version":3,"sources":["/home/vishal/kl-ui/src/_components/molecules/KLDrawer/KLDrawer.js"],"names":["React","makeStyles","Drawer","List","ListItem","ListItemIcon","ListItemText","Typography","useHistory","KLSnackBar","KLButton","useStyles","fullList","width","height","bodyTextStyle","color","fontFamily","fontSize","fontWeight","letterSpacing","lineHeight","headingTextStyle","buttonDivStyle","textAlign","listItemIconStyle","minWidth","largeIconStyle","DrawerComponent","props","classes","resend","setResend","useState","resendMobile","setResendMobile","open","setOpen","history","toggleDrawer","event","type","key","onClose","handleresendMobile","handleresend","handleClick","handleButtonClose","push","list","data","map","text","index","primary","cursor","disable"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Drawer from '@material-ui/core/Drawer';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport { Typography } from '@material-ui/core';\nimport { ReactComponent as Send } from '../../../assets/Icons/send.svg';\nimport { ReactComponent as Resend } from '../../../assets/Icons/resend.svg';\nimport { ReactComponent as SendDull } from '../../../assets/Icons/sendDull.svg';\nimport { ReactComponent as Message } from '../../../assets/Icons/sms.svg';\nimport { ReactComponent as Mail } from '../../../assets/Icons/mail.svg';\nimport { useHistory } from \"react-router-dom\";\nimport KLSnackBar from '../../atoms/KLSnackBar/KLSnackBar';\nimport KLButton from '../../atoms/KLButton/KLButton';\n\nconst useStyles = makeStyles({\n  fullList: {\n    width: 'auto',\n    height: '263'\n  },\n  bodyTextStyle: {\n    height: 32,\n    color: '#344563',\n    fontFamily: 'Roboto Condensed',\n    fontSize: 12,\n    fontWeight: 'bold',\n    letterSpacing: 0,\n    lineHeight: 2.5,\n  },\n  headingTextStyle: {\n    height: 32,\n    color: '#344563',\n    fontFamily: \"Roboto Condensed\",\n    fontSize: 16,\n    fontWeight: \"bold\",\n    letterSpacing: 0,\n    lineHeight: 3,\n  },\n  buttonDivStyle: {\n    textAlign: 'center'\n  },\n  listItemIconStyle: {\n    width: 30,\n    minWidth: 30\n  },\n  largeIconStyle: {\n    width: 50,\n    minWidth: 50\n  }\n});\n\nfunction DrawerComponent\n  (props) {\n  const classes = useStyles();\n  const [resend, setResend] = React.useState(false);\n  const [resendMobile, setResendMobile] = React.useState(false);\n  const [open, setOpen] = React.useState(false);\n  const history = useHistory();\n\n\n  const toggleDrawer = (event) => {\n    if (event.type === 'keydown' && (event.key === 'Tab' || event.key === 'Shift')) {\n      return;\n    }\n    props.onClose()\n    setResend(false)\n    setResendMobile(false)\n  };\n\n  const handleresendMobile = () => {\n    setResendMobile(true)\n  };\n\n  const handleresend = () => {\n    setResend(true)\n  };\n\n  const handleClick = () => {\n    setOpen(true)\n  };\n\n  const handleButtonClose = () => {\n    props.onClose()\n    setResend(false)\n    setResendMobile(false)\n    history.push(\"/newLink\")\n  };\n\n  const list = () => (\n    <div\n      className={classes.fullList}\n      role=\"presentation\"\n    >\n      <List>\n        <Typography\n          className={classes.headingTextStyle}\n          variant='h5'\n          align='center'\n        >\n          Share via\n        </Typography>\n        {props.data.map((text, index) => (\n          <ListItem key={text}>\n            <ListItemIcon\n              className={classes.listItemIconStyle}\n            >\n              {index % 2 === 0 ? <Message /> : <Mail />}\n            </ListItemIcon>\n            <ListItemText\n              classes={{ primary: classes.bodyTextStyle }}\n              primary={text}\n            />\n            <ListItemIcon\n              style={{ cursor: \"pointer\" }}\n              className={classes.largeIconStyle}\n            >\n              {index % 2 === 0 ?\n                props.disable ?\n                  resendMobile ? <Resend />\n                    : <Send onClick={handleresendMobile} />\n                  : <SendDull onClick={handleClick} />\n                : resend ? <Resend /> : <Send onClick={handleresend} />}\n            </ListItemIcon>\n          </ListItem>\n        ))}\n      </List>\n      <div className={classes.buttonDivStyle}>\n        <KLButton\n          disabled={!resend && !resendMobile}\n          value={\"Done\"}\n          onClick={handleButtonClose}\n        />\n      </div>\n    </div>\n  );\n\n  return (\n    <div>\n      {\n        <React.Fragment >\n          <Drawer\n            anchor={'bottom'}\n            open={props.open}\n            onClose={toggleDrawer}\n          >\n            {list()}\n          </Drawer>\n\n          <KLSnackBar\n            open={open}\n            message={\"Go back to contact details and add mobile number\"}\n            onClose={() => { setOpen(false) }}\n          />\n        </React.Fragment>\n      }\n    </div>\n  );\n}\nexport default DrawerComponent;"]},"metadata":{},"sourceType":"module"}