{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = require('lodash.debounce');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _utils = require('./utils');\n\nvar _BreakpointsContext = require('./BreakpointsContext');\n\nvar _messages = require('./messages');\n\nfunction _interopRequireDefault(obj) {\n  return obj && obj.__esModule ? obj : {\n    default: obj\n  };\n}\n\nfunction _classCallCheck(instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n}\n\nfunction _possibleConstructorReturn(self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n}\n\nfunction _inherits(subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n}\n\nvar ReactBreakpoints = function (_React$Component) {\n  _inherits(ReactBreakpoints, _React$Component);\n\n  function ReactBreakpoints(props) {\n    _classCallCheck(this, ReactBreakpoints);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var _this$props = _this.props,\n        breakpoints = _this$props.breakpoints,\n        defaultBreakpoint = _this$props.defaultBreakpoint,\n        guessedBreakpoint = _this$props.guessedBreakpoint; // throw Error if no breakpoints were passed\n\n    if (!breakpoints) throw new Error(_messages.ERRORS.NO_BREAKPOINTS); // throw Error if breakpoints is not an object\n\n    if ((typeof breakpoints === 'undefined' ? 'undefined' : _typeof(breakpoints)) !== 'object') throw new Error(_messages.ERRORS.NOT_OBJECT);\n    var currentBreakpoint = null; // if we are on the client, we directly compote the breakpoint using window width\n\n    if (global.window) {\n      currentBreakpoint = _this.calculateCurrentBreakpoint(_this.convertScreenWidth(global.window.innerWidth));\n    } else if (guessedBreakpoint) {\n      currentBreakpoint = _this.calculateCurrentBreakpoint(guessedBreakpoint);\n    } else if (defaultBreakpoint) {\n      currentBreakpoint = _this.calculateCurrentBreakpoint(defaultBreakpoint);\n    }\n\n    var screenWidth = global.window ? _this.convertScreenWidth(global.window.innerWidth) : defaultBreakpoint;\n    _this.state = {\n      breakpoints: breakpoints || {},\n      // if we are on the client, we set the screen width to the window width,\n      // otherwise, we use the default breakpoint\n      screenWidth: screenWidth,\n      currentBreakpoint: currentBreakpoint\n    };\n    return _this;\n  }\n\n  ReactBreakpoints.prototype.convertScreenWidth = function convertScreenWidth(screenWidth) {\n    var breakpointUnit = this.props.breakpointUnit;\n    return breakpointUnit === 'em' ? (0, _utils.stripUnit)((0, _utils.em)(screenWidth)) : screenWidth;\n  };\n\n  ReactBreakpoints.prototype.componentDidMount = function componentDidMount() {\n    if (typeof window !== 'undefined') {\n      this.readWidth(); // initial width calculation\n\n      if (this.props.debounceResize) {\n        window.addEventListener('resize', (0, _lodash2.default)(this.readWidth, this.props.debounceDelay));\n      } else {\n        window.addEventListener('resize', this.readWidth);\n      }\n\n      window.addEventListener('orientationchange', this.readWidth);\n    }\n  };\n\n  ReactBreakpoints.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (typeof window !== 'undefined') {\n      if (this.props.debounceResize) {\n        window.addEventListener('resize', (0, _lodash2.default)(this.readWidth, this.props.debounceDelay));\n      } else {\n        window.addEventListener('resize', this.readWidth);\n      }\n\n      window.removeEventListener('orientationchange', this.readWidth);\n    }\n  };\n\n  ReactBreakpoints.prototype.calculateCurrentBreakpoint = function calculateCurrentBreakpoint(screenWidth) {\n    var _this2 = this;\n\n    var currentBreakpoint = null;\n    var breakpointKeys = Object.keys(this.props.breakpoints);\n    new (Function.prototype.bind.apply(Array, [null].concat(breakpointKeys)))().reverse() // reverse array to put largest breakpoint first\n    .map(function (breakpoint) {\n      var breakpointValue = _this2.props.breakpoints[breakpoint];\n\n      if (!currentBreakpoint && screenWidth >= breakpointValue) {\n        currentBreakpoint = breakpoint;\n      }\n    }); // If currentBreakpoint is null here, screenWidth is below lowest breakpoint,\n    // so it will still be set to equal lowest breakpoint instead of null\n\n    if (currentBreakpoint === null) {\n      currentBreakpoint = breakpointKeys[0];\n    }\n\n    return currentBreakpoint;\n  };\n\n  ReactBreakpoints.prototype.render = function render() {\n    var children = this.props.children;\n    return _react2.default.createElement(_BreakpointsContext.Provider, {\n      value: this.getContextValues()\n    }, children && children);\n  };\n\n  return ReactBreakpoints;\n}(_react2.default.Component);\n\nReactBreakpoints.defaultProps = {\n  breakpointUnit: 'px',\n  debounceResize: false,\n  debounceDelay: 50,\n  snapMode: true\n};\nReactBreakpoints.propTypes = {\n  /*\n    @breakpoints\n    Your breakpoints object.\n   */\n  breakpoints: _propTypes2.default.objectOf(_propTypes2.default.number),\n\n  /*\n    @breakpointUnit\n    The type of unit that your breakpoints should use - px or em.\n   */\n  breakpointUnit: _propTypes2.default.oneOf(['px', 'em']),\n\n  /*\n    @guessedBreakpoint\n    When rendering on the server, you can do your own magic with for example UA\n    to guess which viewport width a user probably has.\n   */\n  guessedBreakpoint: _propTypes2.default.number,\n  // from server\n\n  /*\n    @defaultBreakpoint\n    In case you don't want to default to mobile on SSR and no guessedBreakpoint\n    is passed, use defaultBreakpoint to set your own value.\n   */\n  defaultBreakpoint: _propTypes2.default.number,\n\n  /*\n    @debounceResize\n    If you don't want the resize listener to be debounced, set to false. Defaults to false\n    when snapMode is true.\n   */\n  debounceResize: _propTypes2.default.bool,\n\n  /*\n    @debounceDelay: number\n    Set a custom delay for how long the debounce timeout should be.\n   */\n  debounceDelay: _propTypes2.default.number,\n\n  /*\n    @snapMode\n    Replaces breakpoints.current with screenWidth, disabling re-render only\n    when breakpoint changes, instead potentially re-rendering when\n    calculateCurrentBreakpoint returns a new value.\n   */\n  snapMode: _propTypes2.default.bool\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.readWidth = function (event) {\n    var snapMode = _this3.props.snapMode;\n    var width = event ? event.target.innerWidth ? event.target.innerWidth : window.innerWidth : window.innerWidth;\n\n    var screenWidth = _this3.convertScreenWidth(width);\n\n    var current = _this3.calculateCurrentBreakpoint(screenWidth);\n\n    _this3.setState(function (state) {\n      if (state.currentBreakpoint === current) return null;\n      return {\n        currentBreakpoint: snapMode ? current : null,\n        screenWidth: snapMode ? null : screenWidth\n      };\n    });\n  };\n\n  this.getContextValues = function () {\n    return _extends({\n      breakpoints: _extends({}, _this3.props.breakpoints)\n    }, _this3.props.snapMode && {\n      currentBreakpoint: _this3.state.currentBreakpoint\n    }, !_this3.props.snapMode && {\n      screenWidth: _this3.state.screenWidth\n    });\n  };\n};\n\nexports.default = ReactBreakpoints;","map":{"version":3,"sources":["/home/vishal/kl-ui/node_modules/react-breakpoints/lib/ReactBreakpoints.js"],"names":["exports","__esModule","_extends","Object","assign","target","i","arguments","length","source","key","prototype","hasOwnProperty","call","_typeof","Symbol","iterator","obj","constructor","_react","require","_react2","_interopRequireDefault","_propTypes","_propTypes2","_lodash","_lodash2","_utils","_BreakpointsContext","_messages","default","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","ReferenceError","_inherits","subClass","superClass","create","value","enumerable","writable","configurable","setPrototypeOf","__proto__","ReactBreakpoints","_React$Component","props","_this","_initialiseProps","_this$props","breakpoints","defaultBreakpoint","guessedBreakpoint","Error","ERRORS","NO_BREAKPOINTS","NOT_OBJECT","currentBreakpoint","global","window","calculateCurrentBreakpoint","convertScreenWidth","innerWidth","screenWidth","state","breakpointUnit","stripUnit","em","componentDidMount","readWidth","debounceResize","addEventListener","debounceDelay","componentWillUnmount","removeEventListener","_this2","breakpointKeys","keys","Function","bind","apply","Array","concat","reverse","map","breakpoint","breakpointValue","render","children","createElement","Provider","getContextValues","Component","defaultProps","snapMode","propTypes","objectOf","number","oneOf","bool","_this3","event","width","current","setState"],"mappings":"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","sourcesContent":["'use strict';\n\nexports.__esModule = true;\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar _react = require('react');\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _propTypes = require('prop-types');\n\nvar _propTypes2 = _interopRequireDefault(_propTypes);\n\nvar _lodash = require('lodash.debounce');\n\nvar _lodash2 = _interopRequireDefault(_lodash);\n\nvar _utils = require('./utils');\n\nvar _BreakpointsContext = require('./BreakpointsContext');\n\nvar _messages = require('./messages');\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar ReactBreakpoints = function (_React$Component) {\n  _inherits(ReactBreakpoints, _React$Component);\n\n  function ReactBreakpoints(props) {\n    _classCallCheck(this, ReactBreakpoints);\n\n    var _this = _possibleConstructorReturn(this, _React$Component.call(this, props));\n\n    _initialiseProps.call(_this);\n\n    var _this$props = _this.props,\n        breakpoints = _this$props.breakpoints,\n        defaultBreakpoint = _this$props.defaultBreakpoint,\n        guessedBreakpoint = _this$props.guessedBreakpoint;\n\n    // throw Error if no breakpoints were passed\n\n    if (!breakpoints) throw new Error(_messages.ERRORS.NO_BREAKPOINTS);\n    // throw Error if breakpoints is not an object\n    if ((typeof breakpoints === 'undefined' ? 'undefined' : _typeof(breakpoints)) !== 'object') throw new Error(_messages.ERRORS.NOT_OBJECT);\n\n    var currentBreakpoint = null;\n\n    // if we are on the client, we directly compote the breakpoint using window width\n    if (global.window) {\n      currentBreakpoint = _this.calculateCurrentBreakpoint(_this.convertScreenWidth(global.window.innerWidth));\n    } else if (guessedBreakpoint) {\n      currentBreakpoint = _this.calculateCurrentBreakpoint(guessedBreakpoint);\n    } else if (defaultBreakpoint) {\n      currentBreakpoint = _this.calculateCurrentBreakpoint(defaultBreakpoint);\n    }\n\n    var screenWidth = global.window ? _this.convertScreenWidth(global.window.innerWidth) : defaultBreakpoint;\n    _this.state = {\n      breakpoints: breakpoints || {},\n      // if we are on the client, we set the screen width to the window width,\n      // otherwise, we use the default breakpoint\n      screenWidth: screenWidth,\n      currentBreakpoint: currentBreakpoint\n    };\n    return _this;\n  }\n\n  ReactBreakpoints.prototype.convertScreenWidth = function convertScreenWidth(screenWidth) {\n    var breakpointUnit = this.props.breakpointUnit;\n\n    return breakpointUnit === 'em' ? (0, _utils.stripUnit)((0, _utils.em)(screenWidth)) : screenWidth;\n  };\n\n  ReactBreakpoints.prototype.componentDidMount = function componentDidMount() {\n    if (typeof window !== 'undefined') {\n      this.readWidth(); // initial width calculation\n\n      if (this.props.debounceResize) {\n        window.addEventListener('resize', (0, _lodash2.default)(this.readWidth, this.props.debounceDelay));\n      } else {\n        window.addEventListener('resize', this.readWidth);\n      }\n      window.addEventListener('orientationchange', this.readWidth);\n    }\n  };\n\n  ReactBreakpoints.prototype.componentWillUnmount = function componentWillUnmount() {\n    if (typeof window !== 'undefined') {\n      if (this.props.debounceResize) {\n        window.addEventListener('resize', (0, _lodash2.default)(this.readWidth, this.props.debounceDelay));\n      } else {\n        window.addEventListener('resize', this.readWidth);\n      }\n      window.removeEventListener('orientationchange', this.readWidth);\n    }\n  };\n\n  ReactBreakpoints.prototype.calculateCurrentBreakpoint = function calculateCurrentBreakpoint(screenWidth) {\n    var _this2 = this;\n\n    var currentBreakpoint = null;\n    var breakpointKeys = Object.keys(this.props.breakpoints);\n    new (Function.prototype.bind.apply(Array, [null].concat(breakpointKeys)))().reverse() // reverse array to put largest breakpoint first\n    .map(function (breakpoint) {\n      var breakpointValue = _this2.props.breakpoints[breakpoint];\n      if (!currentBreakpoint && screenWidth >= breakpointValue) {\n        currentBreakpoint = breakpoint;\n      }\n    });\n    // If currentBreakpoint is null here, screenWidth is below lowest breakpoint,\n    // so it will still be set to equal lowest breakpoint instead of null\n    if (currentBreakpoint === null) {\n      currentBreakpoint = breakpointKeys[0];\n    }\n\n    return currentBreakpoint;\n  };\n\n  ReactBreakpoints.prototype.render = function render() {\n    var children = this.props.children;\n\n    return _react2.default.createElement(\n      _BreakpointsContext.Provider,\n      { value: this.getContextValues() },\n      children && children\n    );\n  };\n\n  return ReactBreakpoints;\n}(_react2.default.Component);\n\nReactBreakpoints.defaultProps = {\n  breakpointUnit: 'px',\n  debounceResize: false,\n  debounceDelay: 50,\n  snapMode: true\n};\nReactBreakpoints.propTypes = {\n  /*\n    @breakpoints\n    Your breakpoints object.\n   */\n  breakpoints: _propTypes2.default.objectOf(_propTypes2.default.number),\n  /*\n    @breakpointUnit\n    The type of unit that your breakpoints should use - px or em.\n   */\n  breakpointUnit: _propTypes2.default.oneOf(['px', 'em']),\n  /*\n    @guessedBreakpoint\n    When rendering on the server, you can do your own magic with for example UA\n    to guess which viewport width a user probably has.\n   */\n  guessedBreakpoint: _propTypes2.default.number, // from server\n  /*\n    @defaultBreakpoint\n    In case you don't want to default to mobile on SSR and no guessedBreakpoint\n    is passed, use defaultBreakpoint to set your own value.\n   */\n  defaultBreakpoint: _propTypes2.default.number,\n  /*\n    @debounceResize\n    If you don't want the resize listener to be debounced, set to false. Defaults to false\n    when snapMode is true.\n   */\n  debounceResize: _propTypes2.default.bool,\n  /*\n    @debounceDelay: number\n    Set a custom delay for how long the debounce timeout should be.\n   */\n  debounceDelay: _propTypes2.default.number,\n  /*\n    @snapMode\n    Replaces breakpoints.current with screenWidth, disabling re-render only\n    when breakpoint changes, instead potentially re-rendering when\n    calculateCurrentBreakpoint returns a new value.\n   */\n  snapMode: _propTypes2.default.bool\n};\n\nvar _initialiseProps = function _initialiseProps() {\n  var _this3 = this;\n\n  this.readWidth = function (event) {\n    var snapMode = _this3.props.snapMode;\n\n    var width = event ? event.target.innerWidth ? event.target.innerWidth : window.innerWidth : window.innerWidth;\n    var screenWidth = _this3.convertScreenWidth(width);\n    var current = _this3.calculateCurrentBreakpoint(screenWidth);\n\n    _this3.setState(function (state) {\n      if (state.currentBreakpoint === current) return null;\n      return {\n        currentBreakpoint: snapMode ? current : null,\n        screenWidth: snapMode ? null : screenWidth\n      };\n    });\n  };\n\n  this.getContextValues = function () {\n    return _extends({\n      breakpoints: _extends({}, _this3.props.breakpoints)\n    }, _this3.props.snapMode && {\n      currentBreakpoint: _this3.state.currentBreakpoint\n    }, !_this3.props.snapMode && {\n      screenWidth: _this3.state.screenWidth\n    });\n  };\n};\n\nexports.default = ReactBreakpoints;"]},"metadata":{},"sourceType":"script"}